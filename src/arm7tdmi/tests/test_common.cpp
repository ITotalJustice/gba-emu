#include "../arm7tdmi.hpp"

namespace arm7tdmi {

static_assert(
    // thumb -> arm
    switch_state(0b100000, state::ARM) == 0b000000 &&
    // thumb -> thumb
    switch_state(0b100000, state::THUMB) == 0b100000 &&
    // arm -> thumb
    switch_state(0b000000, state::THUMB) == 0b100000 &&
    // arm -> arm
    switch_state(0b100000, state::ARM) == 0b000000
);

static_assert(
    // set N, unset N
    set_flag<flags::N>(0b0111'1111'1111'1111'1111'1111'1111'1111, true) == 0b1111'1111'1111'1111'1111'1111'1111'1111 &&
    set_flag<flags::N>(0b1111'1111'1111'1111'1111'1111'1111'1111, false) == 0b0111'1111'1111'1111'1111'1111'1111'1111 &&
    // set Z, unset Z
    set_flag<flags::Z>(0b1011'1111'1111'1111'1111'1111'1111'1111, true) == 0b1111'1111'1111'1111'1111'1111'1111'1111 &&
    set_flag<flags::Z>(0b1111'1111'1111'1111'1111'1111'1111'1111, false) == 0b1011'1111'1111'1111'1111'1111'1111'1111 &&
    // set C, unset C
    set_flag<flags::C>(0b1101'1111'1111'1111'1111'1111'1111'1111, true) == 0b1111'1111'1111'1111'1111'1111'1111'1111 &&
    set_flag<flags::C>(0b1111'1111'1111'1111'1111'1111'1111'1111, false) == 0b1101'1111'1111'1111'1111'1111'1111'1111 &&
    // set V, unset V
    set_flag<flags::V>(0b1110'1111'1111'1111'1111'1111'1111'1111, true) == 0b1111'1111'1111'1111'1111'1111'1111'1111 &&
    set_flag<flags::V>(0b1111'1111'1111'1111'1111'1111'1111'1111, false) == 0b1110'1111'1111'1111'1111'1111'1111'1111
);

static_assert(
    is_state(0b0'0'00000, state::ARM) &&
    is_state(0b0'1'00000, state::THUMB)
);

static_assert(
    is_mode(0b10000, mode::USER) &&
    is_mode(0b10001, mode::FIQ) &&
    is_mode(0b10010, mode::IRQ) &&
    is_mode(0b10011, mode::SUPERVISOR) &&
    is_mode(0b10111, mode::ABORT) &&
    is_mode(0b11011, mode::UNDEFINED) &&
    is_mode(0b11111, mode::SYSTEM)
);

static_assert(
    // N = 0, N = 1
    is_flag_set<flags::N>(0b0111'0000'0000'0000'0000'0000'0000'0000) == false &&
    is_flag_set<flags::N>(0b1000'0000'0000'0000'0000'0000'0000'0000) == true &&
    // Z = 0, Z = 1
    is_flag_set<flags::Z>(0b1011'0000'0000'0000'0000'0000'0000'0000) == false &&
    is_flag_set<flags::Z>(0b0100'0000'0000'0000'0000'0000'0000'0000) == true &&
    // C = 0, C = 1
    is_flag_set<flags::C>(0b1101'0000'0000'0000'0000'0000'0000'0000) == false &&
    is_flag_set<flags::C>(0b0010'0000'0000'0000'0000'0000'0000'0000) == true &&
    // V = 0, V = 1
    is_flag_set<flags::V>(0b1110'0000'0000'0000'0000'0000'0000'0000) == false &&
    is_flag_set<flags::V>(0b0001'0000'0000'0000'0000'0000'0000'0000) == true
);

// N = 0, Z = 1, C = 0, V = 1
static_assert(
    test_cond(0b0101'0000'0000'0000'0000'0000'0000'0000, 0b0000) == true &&
    test_cond(0b0101'0000'0000'0000'0000'0000'0000'0000, 0b0001) == false &&
    test_cond(0b0101'0000'0000'0000'0000'0000'0000'0000, 0b0010) == false &&
    test_cond(0b0101'0000'0000'0000'0000'0000'0000'0000, 0b0011) == true &&
    test_cond(0b0101'0000'0000'0000'0000'0000'0000'0000, 0b0100) == false &&
    test_cond(0b0101'0000'0000'0000'0000'0000'0000'0000, 0b0101) == true &&
    test_cond(0b0101'0000'0000'0000'0000'0000'0000'0000, 0b0110) == true &&
    test_cond(0b0101'0000'0000'0000'0000'0000'0000'0000, 0b0111) == false &&
    test_cond(0b0101'0000'0000'0000'0000'0000'0000'0000, 0b1000) == false &&
    test_cond(0b0101'0000'0000'0000'0000'0000'0000'0000, 0b1001) == true &&
    test_cond(0b0101'0000'0000'0000'0000'0000'0000'0000, 0b1010) == false &&
    test_cond(0b0101'0000'0000'0000'0000'0000'0000'0000, 0b1011) == true &&
    test_cond(0b0101'0000'0000'0000'0000'0000'0000'0000, 0b1100) == false &&
    test_cond(0b0101'0000'0000'0000'0000'0000'0000'0000, 0b1101) == true &&
    test_cond(0b0101'0000'0000'0000'0000'0000'0000'0000, 0b1110) == true
);

static_assert(
    // set bits
    set_flags<ftest::v>(0, 1) == 0b0001'0000'0000'0000'0000'0000'0000'0000 &&
    set_flags<ftest::c>(0, 1) == 0b0010'0000'0000'0000'0000'0000'0000'0000 &&
    set_flags<ftest::z>(0, 1) == 0b0100'0000'0000'0000'0000'0000'0000'0000 &&
    set_flags<ftest::n>(0, 1) == 0b1000'0000'0000'0000'0000'0000'0000'0000 &&
    set_flags<ftest::nz>(0, 1, 1) == 0b1100'0000'0000'0000'0000'0000'0000'0000 &&
    set_flags<ftest::nzc>(0, 1, 1, 1) == 0b1110'0000'0000'0000'0000'0000'0000'0000 &&
    set_flags<ftest::nzcv>(0, 1, 1, 1, 1) == 0b1111'0000'0000'0000'0000'0000'0000'0000 &&
    // unset bits
    set_flags<ftest::nzcv>(0b1111'1111'1111'1111'1111'1111'1111'1111, 0, 0, 0, 0) == 0b0000'1111'1111'1111'1111'1111'1111'1111
);

} // namespace arm7tdmi
